// Code generated by github.com/actgardner/gogen-avro. DO NOT EDIT.
/*
 * SOURCE:
 *     SysFlow.avsc
 */
package sfgo

import (
	"io"
	"fmt"

	"github.com/actgardner/gogen-avro/vm"
	"github.com/actgardner/gogen-avro/vm/types"
)


type UnionNullFOIDTypeEnum int
const (

	 UnionNullFOIDTypeEnumNull UnionNullFOIDTypeEnum = 0

	 UnionNullFOIDTypeEnumFOID UnionNullFOIDTypeEnum = 1

)

type UnionNullFOID struct {

	Null *types.NullVal

	FOID FOID

	UnionType UnionNullFOIDTypeEnum
}

func writeUnionNullFOID(r *UnionNullFOID, w io.Writer) error {
	err := vm.WriteLong(int64(r.UnionType), w)
	if err != nil {
		return err
	}
	switch r.UnionType{
	
	case UnionNullFOIDTypeEnumNull:
		return vm.WriteNull(r.Null, w)
        
	case UnionNullFOIDTypeEnumFOID:
		return writeFOID(r.FOID, w)
        
	}
	return fmt.Errorf("invalid value for *UnionNullFOID")
}

func NewUnionNullFOID() *UnionNullFOID {
	return &UnionNullFOID{}
}

func (_ *UnionNullFOID) SetBoolean(v bool) { panic("Unsupported operation") }
func (_ *UnionNullFOID) SetInt(v int32) { panic("Unsupported operation") }
func (_ *UnionNullFOID) SetFloat(v float32) { panic("Unsupported operation") }
func (_ *UnionNullFOID) SetDouble(v float64) { panic("Unsupported operation") }
func (_ *UnionNullFOID) SetBytes(v []byte) { panic("Unsupported operation") }
func (_ *UnionNullFOID) SetString(v string) { panic("Unsupported operation") }
func (r *UnionNullFOID) SetLong(v int64) { 
	r.UnionType = (UnionNullFOIDTypeEnum)(v)
}
func (r *UnionNullFOID) Get(i int) types.Field {
	switch (i) {
	
	case 0:
		
		
		return r.Null
		
	
	case 1:
		
		
		return (*FOIDWrapper)(&r.FOID)
		
	
	}
	panic("Unknown field index")
}
func (_ *UnionNullFOID) SetDefault(i int) { panic("Unsupported operation") }
func (_ *UnionNullFOID) AppendMap(key string) types.Field { panic("Unsupported operation") }
func (_ *UnionNullFOID) AppendArray() types.Field { panic("Unsupported operation") }
func (_ *UnionNullFOID) Finalize()  { }
