// Code generated by github.com/actgardner/gogen-avro. DO NOT EDIT.
/*
 * SOURCE:
 *     SysFlow.avsc
 */
package sfgo

import (
	"io"
	"github.com/actgardner/gogen-avro/vm/types"
	"github.com/actgardner/gogen-avro/vm"
	"github.com/actgardner/gogen-avro/compiler"
)


type Container struct {

	
	
		Id string
	

	
	
		Name string
	

	
	
		Image string
	

	
	
		Imageid string
	

	
	
		Type ContainerType
	

	
	
		Privileged bool
	

}

const ContainerAvroCRC64Fingerprint = "B.\x90'A\xdd\u007f>"

func NewContainer() (*Container) {
	return &Container{}
}

func DeserializeContainer(r io.Reader) (*Container, error) {
	t := NewContainer()
	deser, err := compiler.CompileSchemaBytes([]byte(t.Schema()), []byte(t.Schema()))
	if err != nil {
		return nil, err
	}

	err = vm.Eval(r, deser, t)
	if err != nil {
		return nil, err
	}
	return t, err
}

func DeserializeContainerFromSchema(r io.Reader, schema string) (*Container, error) {
	t := NewContainer()

	deser, err := compiler.CompileSchemaBytes([]byte(schema), []byte(t.Schema()))
	if err != nil {
		return nil, err
	}

	err = vm.Eval(r, deser, t)
	if err != nil {
		return nil, err
	}
	return t, err
}

func writeContainer(r *Container, w io.Writer) error {
	var err error
	
	err = vm.WriteString( r.Id, w)
	if err != nil {
		return err
	}
	
	err = vm.WriteString( r.Name, w)
	if err != nil {
		return err
	}
	
	err = vm.WriteString( r.Image, w)
	if err != nil {
		return err
	}
	
	err = vm.WriteString( r.Imageid, w)
	if err != nil {
		return err
	}
	
	err = writeContainerType( r.Type, w)
	if err != nil {
		return err
	}
	
	err = vm.WriteBool( r.Privileged, w)
	if err != nil {
		return err
	}
	
	return err
}

func (r *Container) Serialize(w io.Writer) error {
	return writeContainer(r, w)
}

func (r *Container) Schema() string {
	return "{\"fields\":[{\"name\":\"id\",\"type\":\"string\"},{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"image\",\"type\":\"string\"},{\"name\":\"imageid\",\"type\":\"string\"},{\"name\":\"type\",\"type\":{\"name\":\"ContainerType\",\"namespace\":\"sysflow.type\",\"symbols\":[\"CT_DOCKER\",\"CT_LXC\",\"CT_LIBVIRT_LXC\",\"CT_MESOS\",\"CT_RKT\",\"CT_CUSTOM\",\"CT_CRI\",\"CT_CONTAINERD\",\"CT_CRIO\",\"CT_BPM\"],\"type\":\"enum\"}},{\"name\":\"privileged\",\"type\":\"boolean\"}],\"name\":\"sysflow.entity.Container\",\"type\":\"record\"}"
}

func (r *Container) SchemaName() string {
	return "sysflow.entity.Container"
}

func (_ *Container) SetBoolean(v bool) { panic("Unsupported operation") }
func (_ *Container) SetInt(v int32) { panic("Unsupported operation") }
func (_ *Container) SetLong(v int64) { panic("Unsupported operation") }
func (_ *Container) SetFloat(v float32) { panic("Unsupported operation") }
func (_ *Container) SetDouble(v float64) { panic("Unsupported operation") }
func (_ *Container) SetBytes(v []byte) { panic("Unsupported operation") }
func (_ *Container) SetString(v string) { panic("Unsupported operation") }
func (_ *Container) SetUnionElem(v int64) { panic("Unsupported operation") }

func (r *Container) Get(i int) types.Field {
	switch (i) {
	
	case 0:
		
		
			return (*types.String)(&r.Id)
		
	
	case 1:
		
		
			return (*types.String)(&r.Name)
		
	
	case 2:
		
		
			return (*types.String)(&r.Image)
		
	
	case 3:
		
		
			return (*types.String)(&r.Imageid)
		
	
	case 4:
		
		
			return (*types.Int)(&r.Type)
		
	
	case 5:
		
		
			return (*types.Boolean)(&r.Privileged)
		
	
	}
	panic("Unknown field index")
}

func (r *Container) SetDefault(i int) {
	switch (i) {
	
        
	
        
	
        
	
        
	
        
	
        
	
	}
	panic("Unknown field index")
}

func (_ *Container) AppendMap(key string) types.Field { panic("Unsupported operation") }
func (_ *Container) AppendArray() types.Field { panic("Unsupported operation") }
func (_ *Container) Finalize() { }


func (_ *Container) AvroCRC64Fingerprint() []byte {
  return []byte(ContainerAvroCRC64Fingerprint)
}
