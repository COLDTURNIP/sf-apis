// Code generated by github.com/actgardner/gogen-avro. DO NOT EDIT.
/*
 * SOURCE:
 *     SysFlow.avsc
 */
package sfgo

import (
	"io"
	"fmt"

	"github.com/actgardner/gogen-avro/vm"
	"github.com/actgardner/gogen-avro/vm/types"
)


type UnionSFHeaderContainerProcessFileProcessEventNetworkFlowFileFlowFileEventNetworkEventTypeEnum int
const (

	 UnionSFHeaderContainerProcessFileProcessEventNetworkFlowFileFlowFileEventNetworkEventTypeEnumSFHeader UnionSFHeaderContainerProcessFileProcessEventNetworkFlowFileFlowFileEventNetworkEventTypeEnum = 0

	 UnionSFHeaderContainerProcessFileProcessEventNetworkFlowFileFlowFileEventNetworkEventTypeEnumContainer UnionSFHeaderContainerProcessFileProcessEventNetworkFlowFileFlowFileEventNetworkEventTypeEnum = 1

	 UnionSFHeaderContainerProcessFileProcessEventNetworkFlowFileFlowFileEventNetworkEventTypeEnumProcess UnionSFHeaderContainerProcessFileProcessEventNetworkFlowFileFlowFileEventNetworkEventTypeEnum = 2

	 UnionSFHeaderContainerProcessFileProcessEventNetworkFlowFileFlowFileEventNetworkEventTypeEnumFile UnionSFHeaderContainerProcessFileProcessEventNetworkFlowFileFlowFileEventNetworkEventTypeEnum = 3

	 UnionSFHeaderContainerProcessFileProcessEventNetworkFlowFileFlowFileEventNetworkEventTypeEnumProcessEvent UnionSFHeaderContainerProcessFileProcessEventNetworkFlowFileFlowFileEventNetworkEventTypeEnum = 4

	 UnionSFHeaderContainerProcessFileProcessEventNetworkFlowFileFlowFileEventNetworkEventTypeEnumNetworkFlow UnionSFHeaderContainerProcessFileProcessEventNetworkFlowFileFlowFileEventNetworkEventTypeEnum = 5

	 UnionSFHeaderContainerProcessFileProcessEventNetworkFlowFileFlowFileEventNetworkEventTypeEnumFileFlow UnionSFHeaderContainerProcessFileProcessEventNetworkFlowFileFlowFileEventNetworkEventTypeEnum = 6

	 UnionSFHeaderContainerProcessFileProcessEventNetworkFlowFileFlowFileEventNetworkEventTypeEnumFileEvent UnionSFHeaderContainerProcessFileProcessEventNetworkFlowFileFlowFileEventNetworkEventTypeEnum = 7

	 UnionSFHeaderContainerProcessFileProcessEventNetworkFlowFileFlowFileEventNetworkEventTypeEnumNetworkEvent UnionSFHeaderContainerProcessFileProcessEventNetworkFlowFileFlowFileEventNetworkEventTypeEnum = 8

)

type UnionSFHeaderContainerProcessFileProcessEventNetworkFlowFileFlowFileEventNetworkEvent struct {

	SFHeader *SFHeader

	Container *Container

	Process *Process

	File *File

	ProcessEvent *ProcessEvent

	NetworkFlow *NetworkFlow

	FileFlow *FileFlow

	FileEvent *FileEvent

	NetworkEvent *NetworkEvent

	UnionType UnionSFHeaderContainerProcessFileProcessEventNetworkFlowFileFlowFileEventNetworkEventTypeEnum
}

func writeUnionSFHeaderContainerProcessFileProcessEventNetworkFlowFileFlowFileEventNetworkEvent(r *UnionSFHeaderContainerProcessFileProcessEventNetworkFlowFileFlowFileEventNetworkEvent, w io.Writer) error {
	err := vm.WriteLong(int64(r.UnionType), w)
	if err != nil {
		return err
	}
	switch r.UnionType{
	
	case UnionSFHeaderContainerProcessFileProcessEventNetworkFlowFileFlowFileEventNetworkEventTypeEnumSFHeader:
		return writeSFHeader(r.SFHeader, w)
        
	case UnionSFHeaderContainerProcessFileProcessEventNetworkFlowFileFlowFileEventNetworkEventTypeEnumContainer:
		return writeContainer(r.Container, w)
        
	case UnionSFHeaderContainerProcessFileProcessEventNetworkFlowFileFlowFileEventNetworkEventTypeEnumProcess:
		return writeProcess(r.Process, w)
        
	case UnionSFHeaderContainerProcessFileProcessEventNetworkFlowFileFlowFileEventNetworkEventTypeEnumFile:
		return writeFile(r.File, w)
        
	case UnionSFHeaderContainerProcessFileProcessEventNetworkFlowFileFlowFileEventNetworkEventTypeEnumProcessEvent:
		return writeProcessEvent(r.ProcessEvent, w)
        
	case UnionSFHeaderContainerProcessFileProcessEventNetworkFlowFileFlowFileEventNetworkEventTypeEnumNetworkFlow:
		return writeNetworkFlow(r.NetworkFlow, w)
        
	case UnionSFHeaderContainerProcessFileProcessEventNetworkFlowFileFlowFileEventNetworkEventTypeEnumFileFlow:
		return writeFileFlow(r.FileFlow, w)
        
	case UnionSFHeaderContainerProcessFileProcessEventNetworkFlowFileFlowFileEventNetworkEventTypeEnumFileEvent:
		return writeFileEvent(r.FileEvent, w)
        
	case UnionSFHeaderContainerProcessFileProcessEventNetworkFlowFileFlowFileEventNetworkEventTypeEnumNetworkEvent:
		return writeNetworkEvent(r.NetworkEvent, w)
        
	}
	return fmt.Errorf("invalid value for *UnionSFHeaderContainerProcessFileProcessEventNetworkFlowFileFlowFileEventNetworkEvent")
}

func NewUnionSFHeaderContainerProcessFileProcessEventNetworkFlowFileFlowFileEventNetworkEvent() *UnionSFHeaderContainerProcessFileProcessEventNetworkFlowFileFlowFileEventNetworkEvent {
	return &UnionSFHeaderContainerProcessFileProcessEventNetworkFlowFileFlowFileEventNetworkEvent{}
}

func (_ *UnionSFHeaderContainerProcessFileProcessEventNetworkFlowFileFlowFileEventNetworkEvent) SetBoolean(v bool) { panic("Unsupported operation") }
func (_ *UnionSFHeaderContainerProcessFileProcessEventNetworkFlowFileFlowFileEventNetworkEvent) SetInt(v int32) { panic("Unsupported operation") }
func (_ *UnionSFHeaderContainerProcessFileProcessEventNetworkFlowFileFlowFileEventNetworkEvent) SetFloat(v float32) { panic("Unsupported operation") }
func (_ *UnionSFHeaderContainerProcessFileProcessEventNetworkFlowFileFlowFileEventNetworkEvent) SetDouble(v float64) { panic("Unsupported operation") }
func (_ *UnionSFHeaderContainerProcessFileProcessEventNetworkFlowFileFlowFileEventNetworkEvent) SetBytes(v []byte) { panic("Unsupported operation") }
func (_ *UnionSFHeaderContainerProcessFileProcessEventNetworkFlowFileFlowFileEventNetworkEvent) SetString(v string) { panic("Unsupported operation") }
func (r *UnionSFHeaderContainerProcessFileProcessEventNetworkFlowFileFlowFileEventNetworkEvent) SetLong(v int64) { 
	r.UnionType = (UnionSFHeaderContainerProcessFileProcessEventNetworkFlowFileFlowFileEventNetworkEventTypeEnum)(v)
}
func (r *UnionSFHeaderContainerProcessFileProcessEventNetworkFlowFileFlowFileEventNetworkEvent) Get(i int) types.Field {
	switch (i) {
	
	case 0:
		
		r.SFHeader = NewSFHeader()
		
		
		return r.SFHeader
		
	
	case 1:
		
		r.Container = NewContainer()
		
		
		return r.Container
		
	
	case 2:
		
		r.Process = NewProcess()
		
		
		return r.Process
		
	
	case 3:
		
		r.File = NewFile()
		
		
		return r.File
		
	
	case 4:
		
		r.ProcessEvent = NewProcessEvent()
		
		
		return r.ProcessEvent
		
	
	case 5:
		
		r.NetworkFlow = NewNetworkFlow()
		
		
		return r.NetworkFlow
		
	
	case 6:
		
		r.FileFlow = NewFileFlow()
		
		
		return r.FileFlow
		
	
	case 7:
		
		r.FileEvent = NewFileEvent()
		
		
		return r.FileEvent
		
	
	case 8:
		
		r.NetworkEvent = NewNetworkEvent()
		
		
		return r.NetworkEvent
		
	
	}
	panic("Unknown field index")
}
func (_ *UnionSFHeaderContainerProcessFileProcessEventNetworkFlowFileFlowFileEventNetworkEvent) SetDefault(i int) { panic("Unsupported operation") }
func (_ *UnionSFHeaderContainerProcessFileProcessEventNetworkFlowFileFlowFileEventNetworkEvent) AppendMap(key string) types.Field { panic("Unsupported operation") }
func (_ *UnionSFHeaderContainerProcessFileProcessEventNetworkFlowFileFlowFileEventNetworkEvent) AppendArray() types.Field { panic("Unsupported operation") }
func (_ *UnionSFHeaderContainerProcessFileProcessEventNetworkFlowFileFlowFileEventNetworkEvent) Finalize()  { }
