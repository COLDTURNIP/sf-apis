// Code generated by github.com/actgardner/gogen-avro. DO NOT EDIT.
/*
 * SOURCE:
 *     SysFlow.avsc
 */
package sfgo

import (
	"io"
	"fmt"

	"github.com/actgardner/gogen-avro/vm"
	"github.com/actgardner/gogen-avro/vm/types"
)


type UnionNullOIDTypeEnum int
const (

	 UnionNullOIDTypeEnumNull UnionNullOIDTypeEnum = 0

	 UnionNullOIDTypeEnumOID UnionNullOIDTypeEnum = 1

)

type UnionNullOID struct {

	Null *types.NullVal

	OID *OID

	UnionType UnionNullOIDTypeEnum
}

func writeUnionNullOID(r *UnionNullOID, w io.Writer) error {
	err := vm.WriteLong(int64(r.UnionType), w)
	if err != nil {
		return err
	}
	switch r.UnionType{
	
	case UnionNullOIDTypeEnumNull:
		return vm.WriteNull(r.Null, w)
        
	case UnionNullOIDTypeEnumOID:
		return writeOID(r.OID, w)
        
	}
	return fmt.Errorf("invalid value for *UnionNullOID")
}

func NewUnionNullOID() *UnionNullOID {
	return &UnionNullOID{}
}

func (_ *UnionNullOID) SetBoolean(v bool) { panic("Unsupported operation") }
func (_ *UnionNullOID) SetInt(v int32) { panic("Unsupported operation") }
func (_ *UnionNullOID) SetFloat(v float32) { panic("Unsupported operation") }
func (_ *UnionNullOID) SetDouble(v float64) { panic("Unsupported operation") }
func (_ *UnionNullOID) SetBytes(v []byte) { panic("Unsupported operation") }
func (_ *UnionNullOID) SetString(v string) { panic("Unsupported operation") }
func (r *UnionNullOID) SetLong(v int64) { 
	r.UnionType = (UnionNullOIDTypeEnum)(v)
}
func (r *UnionNullOID) Get(i int) types.Field {
	switch (i) {
	
	case 0:
		
		
		return r.Null
		
	
	case 1:
		
		r.OID = NewOID()
		
		
		return r.OID
		
	
	}
	panic("Unknown field index")
}
func (_ *UnionNullOID) SetDefault(i int) { panic("Unsupported operation") }
func (_ *UnionNullOID) AppendMap(key string) types.Field { panic("Unsupported operation") }
func (_ *UnionNullOID) AppendArray() types.Field { panic("Unsupported operation") }
func (_ *UnionNullOID) Finalize()  { }
